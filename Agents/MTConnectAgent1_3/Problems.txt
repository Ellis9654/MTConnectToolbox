
0) Create console project - no precompiled ATL, etc.
a) Setup project as mutlibyte not Unicode string
b) Make code generation static lib use of C lib

1) Create MTCAgent folder copy in  agent/lib/win32 code


2) Preprocessor - Add these definitions
a) _Windows  
b) WIN64 for 64 bit configurations
c) _NO_CRT_STDIO_INLINE for problem (9)


3) Include file : In Projects->C++->Command line Add: @IncludeDirs.txt
IncludeDirs.txt
-I.
-I"C:\Users\michalos\Documents\Visual Studio 2015\Projects\MTConnectAgent1_3\MTConnectAgent\agent"
-I"C:\Users\michalos\Documents\Visual Studio 2015\Projects\MTConnectAgent1_3\MTConnectAgent\lib"
-I"C:\Users\michalos\Documents\Visual Studio 2015\Projects\MTConnectAgent1_3\MTConnectAgent\win32\libxml2-2.9\include"
-I"C:\Users\michalos\Documents\Visual Studio 2015\Projects\MTConnectAgent1_3\MTConnectAgent"
-I"C:\Users\michalos\Documents\Visual Studio 2015\Projects\MTConnectAgent1_3\NIST"

4) gets() in service.cpp

The most recent revision of the C standard (2011) has definitively removed this function from its specification.
The function is deprecated in C++ (as of 2011 standard, which follows C99+TC3).

http://stackoverflow.com/questions/12893774/what-is-gets-equivalent-in-c11

while(gets_s(line, sizeof(line)) != NULL) {


5) timezone not declared 
  globals.cpp(241): error C2065: 'timezone': undeclared identifier

  uint64_t time = (mktime(&timeinfo) - timezone) * 1000000;
 

6) In main file have to declare link path of libxml:

#define MTCLIBPATH(X)    "C:\\Users\\michalos\\Documents\\Visual Studio 2015\\Projects\\MTConnectAgent1_3\\MTConnectAgent\\win32\\libxml2-2.9\\lib" ## X

#if defined( WIN64 ) && defined( _DEBUG )
#pragma message( "DEBUG x64" )
#pragma comment(lib, MTCLIBPATH("libxml2_64d.lib"))
#elif !defined( _DEBUG ) && defined( WIN64 )
#pragma message( "RELEASE x64" )
#pragma comment(lib,  MTCLIBPATH("libxml2_64.lib"))
#endif

7) ConnectAgent1_3.obj : error LNK2005: main already defined in cppagent.obj
remove main project empty main

8) ibxml2d_a_v120_64.lib(error.obj) : error LNK2001: unresolved external symbol __iob_func

http://stackoverflow.com/questions/30412951/unresolved-external-symbol-imp-fprintf-and-imp-iob-func-sdl2

FILE _iob[] = {*stdin, *stdout, *stderr};

extern "C" FILE * __cdecl __iob_func(void)
{
    return _iob;
}


9) unresolved external symbol vfprintf 
#pragma comment(lib, "legacy_stdio_definitions.lib")


10) Add libcmt.lib to Linker Ignore Library Project Properties
This didn't work: /NODEFAULTLIB:library in Linkerv-> properties -> Command Line

11) Couldn't find agent.cfg (not given full path)
 5522 FATAL [0] init.config: Agent failed to load: Please make sure the configur
ation file probe.xml or Devices.xml is in the current directory or specify the c
orrect file in the configuration file agent.cfg using Devices = <file>
Agent failed to load: Please make sure the configuration file probe.xml or Devic
es.xml is in the current directory or specify the correct file in the configurat
ion file agent.cfg using Devices = <file>

in agent.cpp:
static std::string ExeDirectory()
{
	TCHAR buf[1000];
	GetModuleFileName(NULL, buf, 1000);
	std::string path(buf);
	path=path.substr( 0, path.find_last_of( '\\' ) +1 );
	return path;
}
in main:
		SetCurrentDirectory(ExeDirectory().c_str());


12. Problem with service.{h,cpp} caused service start to bomb – "function not found". 
Replaced with old service.{hpp,cpp} and it worked. 
I removed code from service.{hpp,cpp}  that attempted to read registry.
